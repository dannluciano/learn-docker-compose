services:
  traefik:
    image: "traefik"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      # - "--certificatesresolvers.myresolver.acme.email=dannluciano@gmail.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--metrics.prometheus=true"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # - "./letsencrypt:/letsencrypt"
  whoami:
    image: "traefik/whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`localhost`) && Path(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web,websecure"
      # - "traefik.http.routers.whoami.tls.certresolver=myresolver"
      # echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g
      - "traefik.http.middlewares.whoami-auth.basicauth.users=dannluciano:$$apr1$$tqZfq6IJ$$2lY8ALYcEvuwejvfQPadp."
      - "traefik.http.routers.whoami.middlewares=whoami-auth"
  nginx:
    image: "nginxdemos/hello"
    scale: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`localhost`) && Path(`/nginx`)"
      - "traefik.http.routers.nginx.entrypoints=web"
  nginx-plain:
    image: nginxdemos/hello:plain-text
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-plain.rule=Host(`localhost`) && Path(`/plain`)"
      - "traefik.http.routers.nginx-plain.entrypoints=web"
  front:
    build: ./front/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`localhost`)"
      - "traefik.http.routers.front.entrypoints=web"
    volumes:
      - "./front:/app"
  back:
    build: ./back/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.back.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.back.entrypoints=web"
    volumes:
      - "./back:/app"
    environment:
      - POSTGRES_DB=learn-docker 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST=database
    depends_on:
      - database
  database:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_DB=learn-docker
      - POSTGRES_USER=postgres
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - back
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
      - database